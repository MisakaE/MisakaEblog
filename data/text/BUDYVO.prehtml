<h5 data-line="2">vector的创建：</h5>
<pre><code class="cm-s-default language-c++"><span>	</span><span class="cm-variable">vector</span><span class="cm-operator"><</span><span class="cm-type">int</span><span class="cm-operator">></span><span> </span><span class="cm-variable">T1</span><span>; </span><span class="cm-comment">//创建一个空的的容器</span><span>
</span><span>	</span><span class="cm-variable">vector</span><span class="cm-operator"><</span><span class="cm-type">int</span><span class="cm-operator">></span><span> </span><span class="cm-def">T2</span><span>(</span><span class="cm-number">15</span><span>,</span><span class="cm-number">128</span><span>); </span><span class="cm-comment">//创建一个15个元素的容器,每个元素值为128</span><span>
</span><span>	</span><span class="cm-variable">vector</span><span class="cm-operator"><</span><span class="cm-type">int</span><span class="cm-operator">></span><span> </span><span class="cm-def">T3</span><span>(</span><span class="cm-variable">T</span><span>.</span><span class="cm-variable">begin</span><span>(),</span><span class="cm-variable">T</span><span>.</span><span class="cm-variable">end</span><span>()); </span><span class="cm-comment">//使用迭代器,可以取部分元素创建一个新的容器</span><span>
</span><span>	</span><span class="cm-variable">vector</span><span class="cm-operator"><</span><span class="cm-type">int</span><span class="cm-operator">></span><span> </span><span class="cm-def">T4</span><span>(</span><span class="cm-variable">T</span><span>); </span><span class="cm-comment">//创建一个与T完全一样的容器</span><span>
</span><span>	</span><span class="cm-variable">T</span><span>.</span><span class="cm-variable">reserve</span><span>(</span><span class="cm-number">40</span><span>); </span><span class="cm-comment">//给T分配40个空间</span><span>
</span></code></pre>
<h5 data-line="10">vector的访问：</h5>
<pre><code class="cm-s-default language-c++"><span>	</span><span class="cm-variable">vector</span><span class="cm-operator"><</span><span class="cm-type">int</span><span class="cm-operator">></span><span>::</span><span class="cm-variable">iterator</span><span> </span><span class="cm-variable">it</span><span>;</span><span>
</span><span>	</span><span class="cm-variable">it</span><span> </span><span class="cm-operator">=</span><span> </span><span class="cm-variable">T</span><span>.</span><span class="cm-variable">begin</span><span>();</span><span>
</span><span>	</span><span class="cm-operator">*</span><span class="cm-variable">it</span><span> </span><span class="cm-operator">=</span><span> </span><span class="cm-number">13</span><span>;</span><span class="cm-comment">//迭代器访问，将T的第一项改成13</span><span>
</span><span>	</span><span class="cm-variable">T</span><span>[</span><span class="cm-number">0</span><span>] </span><span class="cm-operator">=</span><span> </span><span class="cm-number">13</span><span>;</span><span class="cm-comment">//下标访问，将T的第一项改成13</span><span>
</span><span>	</span><span class="cm-variable">T</span><span>.</span><span class="cm-variable">at</span><span>(</span><span class="cm-variable">x</span><span>);</span><span class="cm-comment">//传回T[x]的数据，如果越界，则抛出out_of_range</span><span>
</span><span>	</span><span class="cm-variable">T</span><span>.</span><span class="cm-variable">back</span><span>();</span><span class="cm-comment">//传回最后一个数据</span><span>
</span><span>    </span><span class="cm-variable">T</span><span>.</span><span class="cm-variable">front</span><span>();</span><span class="cm-comment">//传回第一个数据</span><span>
</span><span>	</span><span class="cm-variable">c</span><span>.</span><span class="cm-variable">begin</span><span>();</span><span class="cm-comment">//传回迭代器中的第一个地址</span><span>
</span><span>    </span><span class="cm-variable">c</span><span>.</span><span class="cm-variable">end</span><span>();</span><span class="cm-comment">//传回迭代器中末端元素的下一个地址</span><span>
</span></code></pre>
<h5 data-line="23">vector的值操作：</h5>
<pre><code class="cm-s-default language-c++"><span>	</span><span class="cm-variable">T</span><span>.</span><span class="cm-variable">assign</span><span>(</span><span class="cm-variable">it_l</span><span>,</span><span class="cm-variable">it_r</span><span>);</span><span class="cm-comment">//将[it_l,lt_r)区间中的数据赋值给T</span><span>
</span><span>    </span><span class="cm-variable">T</span><span>.</span><span class="cm-variable">assign</span><span>(</span><span class="cm-variable">n</span><span>,</span><span class="cm-variable">x</span><span>);</span><span class="cm-comment">//将n个x赋值给T</span><span>
</span><span>	</span><span class="cm-variable">T</span><span>.</span><span class="cm-variable">clear</span><span>();</span><span class="cm-comment">//移除容器中所有数据</span><span>
</span><span>	</span><span class="cm-variable">T</span><span>.</span><span class="cm-variable">erase</span><span>(</span><span class="cm-variable">pos</span><span>);</span><span class="cm-comment">//删除pos位置的数据，传回下一个数据的位置</span><span>
</span><span>	</span><span class="cm-variable">T</span><span>.</span><span class="cm-variable">erase</span><span>(</span><span class="cm-variable">it_l</span><span>,</span><span class="cm-variable">it_r</span><span>)</span><span class="cm-comment">//删除[it_l,it_r)区间的数据，传回下一个数据的位置</span><span>
</span><span>    </span><span class="cm-variable">T</span><span>.</span><span class="cm-variable">insert</span><span>(</span><span class="cm-variable">pos</span><span>,) </span><span class="cm-comment">//在pos位置插入一个elem拷贝，传回新数据位置</span><span>
</span><span>    </span><span class="cm-variable">T</span><span>.</span><span class="cm-variable">insert</span><span>(</span><span class="cm-variable">pos</span><span>,</span><span class="cm-variable">n</span><span>,</span><span class="cm-variable">elem</span><span>) </span><span class="cm-comment">//在pos位置插入n个elem数据,无返回值</span><span>
</span><span>    </span><span class="cm-variable">T</span><span>.</span><span class="cm-variable">insert</span><span>(</span><span class="cm-variable">pos</span><span>,</span><span class="cm-variable">it_l</span><span>,</span><span class="cm-variable">it_r</span><span>);</span><span class="cm-comment">//在pos位置插入在[it_l,it_r)的数据</span><span>
</span><span>	</span><span class="cm-variable">T</span><span>.</span><span class="cm-variable">pop_back</span><span>();</span><span class="cm-comment">//删除容器最后一个数据</span><span>
</span><span>	</span><span class="cm-variable">T</span><span>.</span><span class="cm-variable">push_back</span><span>(</span><span class="cm-variable">x</span><span>);</span><span class="cm-comment">//在容器尾部加入x</span><span>
</span><span>	</span><span class="cm-variable">T1</span><span>.</span><span class="cm-variable">swap</span><span>(</span><span class="cm-variable">T2</span><span>);</span><span class="cm-comment">//将T1和T2元素互换</span><span>
</span></code></pre>
<h5 data-line="38">vector的容量操作</h5>
<pre><code class="cm-s-default language-c++"><span>	</span><span class="cm-variable">T</span><span>.</span><span class="cm-variable">empty</span><span>();</span><span class="cm-comment">//判断容器是否为空</span><span>
</span><span>	</span><span class="cm-variable">T</span><span>.</span><span class="cm-variable">size</span><span>();</span><span class="cm-comment">//返回当前容器大小</span><span>
</span><span>	</span><span class="cm-variable">T</span><span>.</span><span class="cm-variable">max_size</span><span>();</span><span class="cm-comment">//返回容器最大大小</span><span>
</span></code></pre>
